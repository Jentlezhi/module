//
//  CYTWithdrawVM.m
//  CYTEasyPass
//
//  Created by xujunquan on 2017/12/6.
//  Copyright © 2017年 EasyPass. All rights reserved.
//

#import "CYTWithdrawVM.h"
#import "AESCrypt.h"

@interface CYTWithdrawVM ()
@property (nonatomic, assign) NSInteger typeIndex;

@end

@implementation CYTWithdrawVM
@synthesize requestCommand = _requestCommand;

- (void)ff_initWithModel:(FFExtendModel *)model {
    [super ff_initWithModel:model];
    self.withdrawTypeArray = [NSMutableArray array];
    
    CYTWithdrawTypeModel *alipay = [CYTWithdrawTypeModel new];
    alipay.iconName = @"pay_zhifubao";
    alipay.title = @"支付宝";
    alipay.describe = @"推荐支付宝用户使用";
    alipay.select = YES;
    [self.withdrawTypeArray addObject:alipay];
    
    self.typeIndex = 0;
}

- (void)setAccountName:(NSString *)accountName {
    _accountName = accountName;
    self.canSubmit = (accountName.length>0 && _account.length>0);
}

- (void)setAccount:(NSString *)account {
    _account = account;
    self.canSubmit = (_accountName.length>0 && account.length>0);
}

- (NSMutableDictionary *)getSubmitDictionary {
    NSString *secretKey = [NSString tokenValueOf16];
    NSString *Amount = [AESCrypt encrypt:self.withdrawCash password:secretKey];
    NSString *IncomeAccountNO = [AESCrypt encrypt:self.account password:secretKey];
    NSString *PassWord = [AESCrypt encrypt:self.pwdString password:secretKey];
    NSString *accountName = [AESCrypt encrypt:self.accountName password:secretKey];
    
    NSMutableDictionary *parameters = @{@"amount":Amount,
                                        @"incomeAccountNO":IncomeAccountNO,
                                        @"accountName":accountName,
                                        @"passWord":PassWord,
                                        @"tokenValue":Token_Value}.mutableCopy;
    if (self.balanceWithdraw) {
        [parameters setObject:CYTUserId forKey:@"accountID"];
    }else {
        [parameters setObject:self.orderId forKey:@"orderId"];
    }
    return parameters;
}

#pragma mark- api
- (void)api_didSelectWithIndex:(NSInteger)index {
    if (self.typeIndex == index) {
        //上一次和这一次是相同的
        CYTWithdrawTypeModel *model = self.withdrawTypeArray[index];
        model.select = !model.select;
        self.typeIndex = index;
    }else {
        //不同
        CYTWithdrawTypeModel *lastModel = self.withdrawTypeArray[self.typeIndex];
        lastModel.select = NO;
        
        CYTWithdrawTypeModel *model = self.withdrawTypeArray[index];
        model.select = YES;
        
        self.typeIndex = index;
    }
}

#pragma mark- get
- (BOOL)canWithdraw {
    //遍历数组，判断
    if (self.withdrawCash.length>0 && [self.withdrawCash floatValue] != 0) {
        for (CYTWithdrawTypeModel *model in self.withdrawTypeArray) {
            if (model.select) {
                return YES;
            }
        }
    }
    
    return NO;
}

- (RACCommand *)requestCommand {
    if (!_requestCommand) {
        _requestCommand = [self commandWithRequestModel:^FFBasicNetworkRequestModel *{
            FFBasicNetworkRequestModel *model = [FFBasicNetworkRequestModel new];
            model.requestURL = (self.balanceWithdraw)?kURL.user_useraccount_withdraw:kURL.order_withdraw_create;
            model.needHud = YES;
            model.requestParameters = [self getSubmitDictionary];
            return model;
        } andHandle:^(FFBasicNetworkResponseModel *resultModel) {
            if (resultModel.resultEffective) {
                self.poundage = resultModel.dataDictionary[@"fee"];
            }
        }];
    }
    return _requestCommand;
}

- (RACCommand *)accessCashCommand {
    if (!_accessCashCommand) {
        _accessCashCommand = [self commandWithRequestModel:^FFBasicNetworkRequestModel *{
            
            FFBasicNetworkRequestModel *model = [FFBasicNetworkRequestModel new];
            model.needHud = YES;
            if (self.balanceWithdraw) {
                //余额
                model.requestURL = kURL.user_useraccount_myaccount;
                model.requestParameters = @{@"accountID":CYTUserId};
                model.methodType = NetRequestMethodTypePost;
            }else {
                //支付宝
                model.requestURL = kURL.order_withdraw_getAmount;
                model.requestParameters = @{@"orderId":self.orderId};
                model.methodType = NetRequestMethodTypeGet;
            }
            return model;
        } andHandle:^(FFBasicNetworkResponseModel *responseModel) {
            if (responseModel.resultEffective) {
                if (self.balanceWithdraw) {
                    //余额提现（逻辑不改变）
                    float withdraw = [responseModel.dataDictionary[@"availableBalance"] floatValue];
                    self.withdrawCash = [NSString stringWithFormat:@"%.2f",withdraw];
                }else {
                    //现金提现（1.8.1新增）
                    self.withdrawCash = [responseModel.dataDictionary valueForKey:@"withdrawAmount"];
                }
            }else {
                self.withdrawCash = @"0.00";
            }
        }];
    }
    return _accessCashCommand;
}

@end
